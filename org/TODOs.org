* Completed
** DONE Rootless container build
** DONE Global variables config/cache
*** Problem
Config and cache variables are global. Initializing in via init
functions produces side effects.
*** Solution
**** Phase one
***** DONE Move all init functions and global variables to via.go
***** DONE Design structure to encapsulate config/cache/plan

**** Phase two
***** DONE Convert existing code to use Plan context data structure to simplify config/cache/plan use
***** DONE remove cache global instance
** DONE cleanup main init()
** DONE revive lint source tree
** DONE fix broken tests
** DONE remove config field from Plan
** DONE fix revive exceptions
** DONE remove Path usage
** DONE rename Plans to PlanSlice
** DONE create Plans type for working with Plans path
* Inprogress
** DONE sort Plan when encoding json
** DONE use Path embedding where possible
** DONE use Path as function arguments and return Path arguments
** DONE use Path in main
** DONE use dedicated functions for Action literals
** TODO split config flags and package flags
*** Problem
Global and plan flags are merged together. This does not always work
for plans that are not of the gnu build type.

*** Solution
**** DONE Don't expand Flags and PlanFlags with using environment use os.Expand instead?

**** TODO Don't merge Global and Plan flags. use Flags and PlanFlags
environment variables
** TODO refactor sub packaging
*** Problem
sub packaging is recursive, which makes accessing the BuildDir resolve
to sub plan which does not exist. Since we need to run commands from
the parent BuildDir
** TODO refactor Batch
** TODO end user docker instance
** TODO install build depends in namespace, clean namespace after
*** TODO revisit dependency installation
** TODO implement postinstall
** TODO Expand Config using UnMarshal and Marshal?
** TODO create Default config
** TODO allow via fmt to format stdin json to stdout
* Todo
** TODO move environment expand to environment file
** TODO Offline multihash verification
** TODO Go documentation
*** DONE First pass complete
*** TODO Do another pass
** TODO GPL3 license
** TODO fix all file masks
** TODO 100% test converge
** TODO Modify bind mounts to have a source and target
** TODO Logger
** TODO User type for user defined configuration
** TODO System type used for system install/configuration
